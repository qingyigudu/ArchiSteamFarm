# ASF is a C# project with a solution file named ArchiSteamFarm.sln
language: csharp
solution: ArchiSteamFarm.sln

# We can save bandwidth by limiting git clone to only last 10 commits
git:
  depth: 10

# ASF is based on .NET Core platform, we're not building with Mono
dotnet: 3.1
mono: none

env:
  global:
    - CONFIGURATION: Release
    - DOTNET_CLI_TELEMETRY_OPTOUT: 1
    - DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    - NET_CORE_VERSION: netcoreapp3.1
    - VARIANTS="generic linux-arm linux-x64 osx-x64 win-x64" # NOTE: When modifying variants, don't forget to update ASF_VARIANT definitions in SharedInfo.cs!
before_script:
  - |
    set -eu

    dotnet --info
    set +u # This is needed to continue Travis build
script:
  - |
    set -eu

    nvm install lts/*
    npm ci --no-progress --prefix ASF-ui
    npm run-script deploy --no-progress --prefix ASF-ui

    dotnet build ArchiSteamFarm -c "$CONFIGURATION" -f "$NET_CORE_VERSION" --nologo
    dotnet build ArchiSteamFarm.CustomPlugins.ExamplePlugin -c "$CONFIGURATION" -f "$NET_CORE_VERSION" --nologo
    dotnet test ArchiSteamFarm.Tests -c "$CONFIGURATION" -f "$NET_CORE_VERSION" --nologo

    publish() {
        if [ "$1" = 'generic' ]; then
            local variantArgs="/p:UseAppHost=false"
        else
            local variantArgs="-r $1 /p:PublishTrimmed=true"
        fi

        dotnet publish ArchiSteamFarm -c "$CONFIGURATION" -f "$NET_CORE_VERSION" -o "out/${1}" --no-restore --nologo "/p:ASFVariant=$1" $variantArgs

        # If we include any overlay for this variant, copy it to output directory
        if [ -d "ArchiSteamFarm/overlay/${1}" ]; then
            cp "ArchiSteamFarm/overlay/${1}/"* "out/${1}"
        fi
    }

    dotnet clean ArchiSteamFarm -c "$CONFIGURATION" -f "$NET_CORE_VERSION" --nologo
    dotnet restore ArchiSteamFarm

    jobs=""

    for variant in $VARIANTS; do
        publish "$variant" &
        jobs="$jobs $!"
    done

    for job in $jobs; do
        wait "$job"
    done

    set +u # This is needed to continue Travis build
matrix:
  # We can use fast finish, as we don't need to wait for allow_failures builds to mark build as success
  fast_finish: true
  include:
    # We're building ASF with dotnet on latest versions of Linux and OS X
    # Sadly, travis is still missing support for selecting latest images: https://github.com/travis-ci/travis-ci/issues/8922
    - os: linux
      # Ref: https://docs.travis-ci.com/user/reference/linux
      dist: bionic
    - os: osx
      # Ref: https://docs.travis-ci.com/user/reference/osx
      dotnet: 3.1.100 # For OSX, we need absolute dotnet version until https://github.com/dotnet/core-setup/issues/4187 is resolved
      osx_image: xcode11.2
